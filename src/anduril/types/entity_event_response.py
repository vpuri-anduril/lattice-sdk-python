# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ..core.serialization import FieldMetadata
from .entity_event import EntityEvent


class EntityEventResponse(UniversalBaseModel):
    session_token: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="sessionToken")] = (
        pydantic.Field(default=None)
    )
    """
    Long-poll session identifier. Use this token to resume polling on subsequent requests.
    """

    entity_events: typing_extensions.Annotated[
        typing.Optional[typing.List[EntityEvent]], FieldMetadata(alias="entityEvents")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .entity import Entity  # noqa: E402, F401, I001
from .override import Override  # noqa: E402, F401, I001
from .overrides import Overrides  # noqa: E402, F401, I001

update_forward_refs(EntityEventResponse)
