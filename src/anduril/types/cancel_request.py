# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ..core.serialization import FieldMetadata


class CancelRequest(UniversalBaseModel):
    """
    Request to Cancel a Task.
    """

    task_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="taskId")] = pydantic.Field(
        default=None
    )
    """
    ID of the Task to cancel.
    """

    assignee: typing.Optional["Principal"] = pydantic.Field(default=None)
    """
    The assignee of the Task. Useful for agent routing where an endpoint owns multiple agents,
     especially onBehalfOf assignees.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .principal import Principal  # noqa: E402, F401, I001

update_forward_refs(CancelRequest)
